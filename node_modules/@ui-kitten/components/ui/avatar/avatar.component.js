/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { Image, StyleSheet, } from 'react-native';
import { styled, } from '../../theme';
/**
 * `Avatar` is a styled `Image` component.
 *
 * @extends React.Component
 *
 * @property {string} shape - Determines the shape of the component.
 * Can be `round`, `rounded` or `square`.
 * Default is `round`.
 *
 * @property {string} size - Determines the size of the component.
 * Can be `tiny`, `small`, `medium`, `large`, or `giant`.
 * Default is `medium`.
 *
 * @property {ImageProps} ...ImageProps - Any props applied to Image component.
 *
 * @overview-example AvatarSimpleUsage
 *
 * @overview-example AvatarSize
 *
 * @overview-example AvatarShape
 *
 * @example AvatarRemoteImages
 *
 * @example AvatarInlineStyling
 */
export class AvatarComponent extends React.Component {
    constructor() {
        super(...arguments);
        this.getComponentStyle = (source) => {
            const { roundCoefficient, ...containerParameters } = source;
            // @ts-ignore: avoid checking `containerParameters`
            const baseStyle = StyleSheet.flatten([
                containerParameters,
                this.props.style,
            ]);
            // @ts-ignore: rhs operator is restricted to be number
            const borderRadius = roundCoefficient * baseStyle.height;
            return {
                borderRadius,
                ...baseStyle,
            };
        };
    }
    render() {
        const { themedStyle, ...restProps } = this.props;
        const componentStyle = this.getComponentStyle(themedStyle);
        return (React.createElement(Image, Object.assign({}, restProps, { style: componentStyle })));
    }
}
AvatarComponent.styledComponentName = 'Avatar';
export const Avatar = styled(AvatarComponent);
//# sourceMappingURL=avatar.component.js.map